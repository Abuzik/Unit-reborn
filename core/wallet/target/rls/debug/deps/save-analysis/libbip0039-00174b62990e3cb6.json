{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1","program":"/home/yourgod/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bip0039","--edition=2021","/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"rand\"","--cfg","feature=\"std\"","-C","metadata=00174b62990e3cb6","-C","extra-filename=-00174b62990e3cb6","--out-dir","/home/yourgod/programming/Rust/Blockchain-Project/Unit-unit-rust-reborn/core/wallet/target/rls/debug/deps","-L","dependency=/home/yourgod/programming/Rust/Blockchain-Project/Unit-unit-rust-reborn/core/wallet/target/rls/debug/deps","--extern","hmac=/home/yourgod/programming/Rust/Blockchain-Project/Unit-unit-rust-reborn/core/wallet/target/rls/debug/deps/libhmac-3f9400de4b3f1232.rmeta","--extern","pbkdf2=/home/yourgod/programming/Rust/Blockchain-Project/Unit-unit-rust-reborn/core/wallet/target/rls/debug/deps/libpbkdf2-66ac92f4cc423edf.rmeta","--extern","rand=/home/yourgod/programming/Rust/Blockchain-Project/Unit-unit-rust-reborn/core/wallet/target/rls/debug/deps/librand-735b8550bc187372.rmeta","--extern","sha2=/home/yourgod/programming/Rust/Blockchain-Project/Unit-unit-rust-reborn/core/wallet/target/rls/debug/deps/libsha2-452e1b5b1e1e3f6f.rmeta","--extern","unicode_normalization=/home/yourgod/programming/Rust/Blockchain-Project/Unit-unit-rust-reborn/core/wallet/target/rls/debug/deps/libunicode_normalization-daf6d465a64a8b7b.rmeta","--extern","zeroize=/home/yourgod/programming/Rust/Blockchain-Project/Unit-unit-rust-reborn/core/wallet/target/rls/debug/deps/libzeroize-959d7012008bb8b0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/yourgod/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/yourgod/programming/Rust/Blockchain-Project/Unit-unit-rust-reborn/core/wallet/target/rls/debug/deps/libbip0039-00174b62990e3cb6.rmeta"},"prelude":{"crate_id":{"name":"bip0039","disambiguator":[3042792230274157914,0]},"crate_root":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src","external_crates":[{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14788966508543342302,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","num":2,"id":{"name":"core","disambiguator":[2825088610194081445,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9481142260376939403,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16420834686343379425,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11097033969885139948,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6800150773471260640,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9424233180753397496,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4493421558680613340,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[10587786945246582611,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6037489587312533517,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[12999623613951624675,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[15285592788019233460,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[7690318462147983057,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[16937637772373355212,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[8216859446519220865,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[6387052066414425180,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[879344915155370202,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[12947071141408240460,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12545025351940724261,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":20,"id":{"name":"hmac","disambiguator":[10168746119203549650,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":21,"id":{"name":"digest","disambiguator":[2358728147554868587,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":22,"id":{"name":"crypto_common","disambiguator":[5467915393634550326,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":23,"id":{"name":"generic_array","disambiguator":[14659237377528794186,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":24,"id":{"name":"typenum","disambiguator":[2930080192617149959,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":25,"id":{"name":"block_buffer","disambiguator":[1890734334836265874,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":26,"id":{"name":"subtle","disambiguator":[10689169274221538982,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":27,"id":{"name":"sha2","disambiguator":[13216360952582366640,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":28,"id":{"name":"cfg_if","disambiguator":[3771446270907224645,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":29,"id":{"name":"cpufeatures","disambiguator":[16942923178064742376,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":30,"id":{"name":"zeroize","disambiguator":[16493473960594367884,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":31,"id":{"name":"zeroize_derive","disambiguator":[6486427544025220084,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":32,"id":{"name":"rand","disambiguator":[8886965499745076063,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":33,"id":{"name":"rand_core","disambiguator":[11275432460639071681,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":34,"id":{"name":"getrandom","disambiguator":[299463323817821296,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":35,"id":{"name":"libc","disambiguator":[14001125161496958427,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":36,"id":{"name":"rand_chacha","disambiguator":[14635459493060025922,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":37,"id":{"name":"ppv_lite86","disambiguator":[3927748370373369900,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":38,"id":{"name":"unicode_normalization","disambiguator":[15275163187057665928,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":39,"id":{"name":"tinyvec","disambiguator":[8567151676845291880,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":40,"id":{"name":"tinyvec_macros","disambiguator":[16802705881704077655,0]}},{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","num":41,"id":{"name":"pbkdf2","disambiguator":[12559414017032593275,0]}}],"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":0,"byte_end":1082,"line_start":1,"line_end":40,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":1016,"byte_end":1021,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":1037,"byte_end":1045,"line_start":38,"line_end":38,"column_start":15,"column_end":23},"alias_span":null,"name":"Language","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":1062,"byte_end":1067,"line_start":39,"line_end":39,"column_start":16,"column_end":21},"alias_span":null,"name":"Count","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":1069,"byte_end":1077,"line_start":39,"line_end":39,"column_start":23,"column_end":31},"alias_span":null,"name":"Mnemonic","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":0,"byte_end":1082,"line_start":1,"line_end":40,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":28},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":174}],"decl_id":null,"docs":" Another Rust implementation of [BIP-0039](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki) standard.","sig":null,"attributes":[{"value":"/ Another Rust implementation of [BIP-0039](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki) standard.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":0,"byte_end":119,"line_start":1,"line_end":1,"column_start":1,"column_end":120}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":120,"byte_end":123,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":124,"byte_end":136,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":137,"byte_end":140,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":141,"byte_end":152,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/ use bip0039::{Count, Language, Mnemonic};","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":153,"byte_end":198,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":199,"byte_end":202,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ /// Generates an English mnemonic with 12 words randomly","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":203,"byte_end":263,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"/ let mnemonic = Mnemonic::generate(Count::Words12);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":264,"byte_end":318,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":319,"byte_end":322,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ /// Gets the phrase","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":323,"byte_end":346,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/ let phrase = mnemonic.phrase();","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":347,"byte_end":382,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/ println!(\"phrase: {}\", phrase);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":383,"byte_end":418,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":419,"byte_end":422,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ /// Generates the HD wallet seed from the mnemonic and the passphrase.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":423,"byte_end":497,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ let seed = mnemonic.to_seed(\"\");","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":498,"byte_end":534,"line_start":16,"line_end":16,"column_start":1,"column_end":37}},{"value":"/ println!(\"seed: {}\", hex::encode(&seed[..]));","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":535,"byte_end":584,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":585,"byte_end":588,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ /// Generates a Simplified Chinese mnemonic with 12 words randomly","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":589,"byte_end":659,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ let mnemonic = Mnemonic::generate_in(Language::SimplifiedChinese, Count::Words12);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":660,"byte_end":746,"line_start":20,"line_end":20,"column_start":1,"column_end":87}},{"value":"/ println!(\"phrase: {}\", mnemonic.phrase());","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":747,"byte_end":793,"line_start":21,"line_end":21,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":794,"byte_end":801,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":802,"byte_end":805,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"deny(unused_imports)","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":807,"byte_end":831,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/lib.rs","byte_start":832,"byte_end":854,"line_start":26,"line_end":26,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":178},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1292,"byte_end":1304,"line_start":9,"line_end":9,"column_start":5,"column_end":17},"name":"BadWordCount","qualname":"::error::Error::BadWordCount","value":"Error::BadWordCount(usize)","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Mnemonic only support 12/15/18/21/24 words.\n","sig":null,"attributes":[{"value":"/ Mnemonic only support 12/15/18/21/24 words.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1240,"byte_end":1287,"line_start":8,"line_end":8,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1399,"byte_end":1417,"line_start":11,"line_end":11,"column_start":5,"column_end":23},"name":"BadEntropyBitCount","qualname":"::error::Error::BadEntropyBitCount","value":"Error::BadEntropyBitCount(usize)","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Entropy was not a multiple of 32 bits or between 128-256n bits in length.\n","sig":null,"attributes":[{"value":"/ Entropy was not a multiple of 32 bits or between 128-256n bits in length.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1317,"byte_end":1394,"line_start":10,"line_end":10,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1473,"byte_end":1484,"line_start":13,"line_end":13,"column_start":5,"column_end":16},"name":"UnknownWord","qualname":"::error::Error::UnknownWord","value":"Error::UnknownWord(String)","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" Mnemonic contains an unknown word.\n","sig":null,"attributes":[{"value":"/ Mnemonic contains an unknown word.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1430,"byte_end":1468,"line_start":12,"line_end":12,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1544,"byte_end":1559,"line_start":15,"line_end":15,"column_start":5,"column_end":20},"name":"InvalidChecksum","qualname":"::error::Error::InvalidChecksum","value":"Error::InvalidChecksum","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" The mnemonic has an invalid checksum.\n","sig":null,"attributes":[{"value":"/ The mnemonic has an invalid checksum.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1498,"byte_end":1539,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":177},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1228,"byte_end":1233,"line_start":7,"line_end":7,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    BadWordCount(usize),\n    BadEntropyBitCount(usize),\n    UnknownWord(String),\n    InvalidChecksum,\n}","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187}],"decl_id":null,"docs":" The BIP-0039 error.\n","sig":null,"attributes":[{"value":"/ The BIP-0039 error.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1156,"byte_end":1179,"line_start":5,"line_end":5,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":201},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":3043,"byte_end":3050,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"English","qualname":"::language::Language::English","value":"Language::English","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" The English language.\n","sig":null,"attributes":[{"value":"/ The English language.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":3013,"byte_end":3038,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":200},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":2998,"byte_end":3006,"line_start":26,"line_end":26,"column_start":10,"column_end":18},"name":"Language","qualname":"::language::Language","value":"pub enum Language { English, }","parent":null,"children":[{"krate":0,"index":201}],"decl_id":null,"docs":" Language to be used for the mnemonic phrase.","sig":null,"attributes":[{"value":"/ Language to be used for the mnemonic phrase.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":2758,"byte_end":2806,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":2807,"byte_end":2810,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The English language is always available, other languages are enabled using","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":2811,"byte_end":2890,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ the compilation features.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":2891,"byte_end":2920,"line_start":24,"line_end":24,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":4174,"byte_end":4177,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"all","qualname":"<Language>::all","value":"pub fn all() -> &'static [Language]","parent":null,"children":[],"decl_id":null,"docs":" The list of supported languages.\n Language support is managed by the compile features.\n","sig":null,"attributes":[{"value":"/ The list of supported languages.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":4065,"byte_end":4101,"line_start":71,"line_end":71,"column_start":5,"column_end":41}},{"value":"/ Language support is managed by the compile features.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":4106,"byte_end":4162,"line_start":72,"line_end":72,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":7633,"byte_end":7648,"line_start":166,"line_end":166,"column_start":12,"column_end":27},"name":"words_by_prefix","qualname":"<Language>::words_by_prefix","value":"pub fn words_by_prefix(Self, &str) -> &[&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Returns words from the word list that start with the given prefix.\n","sig":null,"attributes":[{"value":"/ Returns words from the word list that start with the given prefix.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":7551,"byte_end":7621,"line_start":165,"line_end":165,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":222},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":33673,"byte_end":33680,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"Words12","qualname":"::mnemonic::Count::Words12","value":"Count::Words12","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" 12 words, entropy length: 128 bits, the checksum length: 4 bits.\n","sig":null,"attributes":[{"value":"/ 12 words, entropy length: 128 bits, the checksum length: 4 bits.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":33600,"byte_end":33668,"line_start":26,"line_end":26,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":225},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":33789,"byte_end":33796,"line_start":29,"line_end":29,"column_start":5,"column_end":12},"name":"Words15","qualname":"::mnemonic::Count::Words15","value":"Count::Words15","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" 15 words, entropy length: 160 bits, the checksum length: 5 bits.\n","sig":null,"attributes":[{"value":"/ 15 words, entropy length: 160 bits, the checksum length: 5 bits.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":33716,"byte_end":33784,"line_start":28,"line_end":28,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":228},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":33905,"byte_end":33912,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Words18","qualname":"::mnemonic::Count::Words18","value":"Count::Words18","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" 18 words, entropy length: 192 bits, the checksum length: 6 bits.\n","sig":null,"attributes":[{"value":"/ 18 words, entropy length: 192 bits, the checksum length: 6 bits.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":33832,"byte_end":33900,"line_start":30,"line_end":30,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":231},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":34021,"byte_end":34028,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"Words21","qualname":"::mnemonic::Count::Words21","value":"Count::Words21","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" 21 words, entropy length: 224 bits, the checksum length: 7 bits.\n","sig":null,"attributes":[{"value":"/ 21 words, entropy length: 224 bits, the checksum length: 7 bits.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":33948,"byte_end":34016,"line_start":32,"line_end":32,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":234},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":34137,"byte_end":34144,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"Words24","qualname":"::mnemonic::Count::Words24","value":"Count::Words24","parent":{"krate":0,"index":221},"children":[],"decl_id":null,"docs":" 24 words, entropy length: 256 bits, the checksum length: 8 bits.\n","sig":null,"attributes":[{"value":"/ 24 words, entropy length: 256 bits, the checksum length: 8 bits.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":34064,"byte_end":34132,"line_start":34,"line_end":34,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":221},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":33588,"byte_end":33593,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Count","qualname":"::mnemonic::Count","value":"pub enum Count { Words12 = , Words15 = , Words18 = , Words21 = , Words24 = , }","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234}],"decl_id":null,"docs":" Determines the words count that will be present in a [`Mnemonic`] phrase.\n","sig":null,"attributes":[{"value":"/ Determines the words count that will be present in a [`Mnemonic`] phrase.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":33433,"byte_end":33510,"line_start":23,"line_end":23,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36165,"byte_end":36175,"line_start":108,"line_end":108,"column_start":18,"column_end":28},"name":"word_count","qualname":"<Count>::word_count","value":"pub const fn word_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of words.\n","sig":null,"attributes":[{"value":"/ Returns the number of words.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36115,"byte_end":36147,"line_start":107,"line_end":107,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36313,"byte_end":36323,"line_start":113,"line_end":113,"column_start":18,"column_end":28},"name":"total_bits","qualname":"<Count>::total_bits","value":"pub const fn total_bits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of entropy+checksum bits.\n","sig":null,"attributes":[{"value":"/ Returns the number of entropy+checksum bits.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36247,"byte_end":36295,"line_start":112,"line_end":112,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36461,"byte_end":36473,"line_start":118,"line_end":118,"column_start":18,"column_end":30},"name":"entropy_bits","qualname":"<Count>::entropy_bits","value":"pub const fn entropy_bits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of entropy bits.\n","sig":null,"attributes":[{"value":"/ Returns the number of entropy bits.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36404,"byte_end":36443,"line_start":117,"line_end":117,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36604,"byte_end":36617,"line_start":123,"line_end":123,"column_start":18,"column_end":31},"name":"checksum_bits","qualname":"<Count>::checksum_bits","value":"pub const fn checksum_bits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of checksum bits.\n","sig":null,"attributes":[{"value":"/ Returns the number of checksum bits.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36546,"byte_end":36586,"line_start":122,"line_end":122,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":255},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38166,"byte_end":38174,"line_start":171,"line_end":171,"column_start":12,"column_end":20},"name":"Mnemonic","qualname":"::mnemonic::Mnemonic","value":"Mnemonic {  }","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":" A mnemonic representation.","sig":null,"attributes":[{"value":"/ A mnemonic representation.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36950,"byte_end":36980,"line_start":140,"line_end":140,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36981,"byte_end":36984,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ First, an initial entropy of ENT bits is generated.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":36985,"byte_end":37040,"line_start":142,"line_end":142,"column_start":1,"column_end":56}},{"value":"/ A checksum is generated by taking the first `ENT/32` bits of its SHA256 hash.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37041,"byte_end":37122,"line_start":143,"line_end":143,"column_start":1,"column_end":82}},{"value":"/ This checksum is appended to the end of the initial entropy.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37123,"byte_end":37187,"line_start":144,"line_end":144,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37188,"byte_end":37191,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Next, these concatenated bits are split into groups of `11` bits,","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37192,"byte_end":37261,"line_start":146,"line_end":146,"column_start":1,"column_end":70}},{"value":"/ each encoding a number from 0-2047, serving as an index into a wordlist.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37262,"byte_end":37338,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37339,"byte_end":37342,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Finally, we convert these numbers into words and use the joined words as a mnemonic sentence.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37343,"byte_end":37440,"line_start":149,"line_end":149,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37441,"byte_end":37444,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ - **ENT**: the initial entropy length","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37445,"byte_end":37486,"line_start":151,"line_end":151,"column_start":1,"column_end":42}},{"value":"/ - **CS**: the checksum length","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37487,"byte_end":37520,"line_start":152,"line_end":152,"column_start":1,"column_end":34}},{"value":"/ - **MS**: the length of the generated mnemonic sentence in words","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37521,"byte_end":37589,"line_start":153,"line_end":153,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37590,"byte_end":37593,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ **CS** = **ENT** / 32","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37594,"byte_end":37619,"line_start":155,"line_end":155,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37620,"byte_end":37623,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ **MS** = (**ENT** + **CS**) / 11","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37624,"byte_end":37660,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37661,"byte_end":37664,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ |  ENT  |  CS  | ENT+CS |  MS  |","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37665,"byte_end":37701,"line_start":159,"line_end":159,"column_start":1,"column_end":37}},{"value":"/ | :---: | :--: | :----: | :--: |","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37702,"byte_end":37738,"line_start":160,"line_end":160,"column_start":1,"column_end":37}},{"value":"/ |  128  |  4   |  132   |  12  |","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37739,"byte_end":37775,"line_start":161,"line_end":161,"column_start":1,"column_end":37}},{"value":"/ |  160  |  5   |  165   |  15  |","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37776,"byte_end":37812,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/ |  192  |  6   |  198   |  18  |","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37813,"byte_end":37849,"line_start":163,"line_end":163,"column_start":1,"column_end":37}},{"value":"/ |  224  |  7   |  231   |  21  |","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37850,"byte_end":37886,"line_start":164,"line_end":164,"column_start":1,"column_end":37}},{"value":"/ |  256  |  8   |  264   |  24  |","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37887,"byte_end":37923,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37924,"byte_end":37927,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ For example, a 12 word mnemonic phrase is essentially a friendly representation of","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":37928,"byte_end":38014,"line_start":167,"line_end":167,"column_start":1,"column_end":87}},{"value":"/ a 128-bit key, while a 24 word mnemonic phrase is essentially a 256-bit key.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38015,"byte_end":38095,"line_start":168,"line_end":168,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38096,"byte_end":38099,"line_start":169,"line_end":169,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39316,"byte_end":39324,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"generate","qualname":"<Mnemonic>::generate","value":"pub fn generate(Count) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a new English [`Mnemonic`] randomly in the specified word count.","sig":null,"attributes":[{"value":"/ Generates a new English [`Mnemonic`] randomly in the specified word count.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38992,"byte_end":39070,"line_start":217,"line_end":217,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39075,"byte_end":39078,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39083,"byte_end":39096,"line_start":219,"line_end":219,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39101,"byte_end":39104,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39109,"byte_end":39116,"line_start":221,"line_end":221,"column_start":5,"column_end":12}},{"value":"/ use bip0039::{Count, Mnemonic};","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39121,"byte_end":39156,"line_start":222,"line_end":222,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39161,"byte_end":39164,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ let mnemonic = Mnemonic::generate(Count::Words12);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39169,"byte_end":39223,"line_start":224,"line_end":224,"column_start":5,"column_end":59}},{"value":"/ let phrase = mnemonic.phrase();","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39228,"byte_end":39263,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39268,"byte_end":39275,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"rand\")","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39280,"byte_end":39304,"line_start":227,"line_end":227,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39793,"byte_end":39804,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"generate_in","qualname":"<Mnemonic>::generate_in","value":"pub fn generate_in(Language, Count) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generates a new [`Mnemonic`] randomly in the specified language and word count.","sig":null,"attributes":[{"value":"/ Generates a new [`Mnemonic`] randomly in the specified language and word count.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39422,"byte_end":39505,"line_start":232,"line_end":232,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39510,"byte_end":39513,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39518,"byte_end":39531,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39536,"byte_end":39539,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39544,"byte_end":39551,"line_start":236,"line_end":236,"column_start":5,"column_end":12}},{"value":"/ use bip0039::{Count, Language, Mnemonic};","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39556,"byte_end":39601,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39606,"byte_end":39609,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ let mnemonic = Mnemonic::generate_in(Language::SimplifiedChinese, Count::Words24);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39614,"byte_end":39700,"line_start":239,"line_end":239,"column_start":5,"column_end":91}},{"value":"/ let phrase = mnemonic.phrase();","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39705,"byte_end":39740,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39745,"byte_end":39752,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"rand\")","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":39757,"byte_end":39781,"line_start":242,"line_end":242,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40794,"byte_end":40806,"line_start":267,"line_end":267,"column_start":12,"column_end":24},"name":"from_entropy","qualname":"<Mnemonic>::from_entropy","value":"pub fn from_entropy<E: Into<Vec<u8>>>(E) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new English [`Mnemonic`] from the given entropy.","sig":null,"attributes":[{"value":"/ Creates a new English [`Mnemonic`] from the given entropy.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40322,"byte_end":40384,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40389,"byte_end":40392,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40397,"byte_end":40410,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40415,"byte_end":40418,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40423,"byte_end":40430,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use bip0039::Mnemonic;","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40435,"byte_end":40461,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40466,"byte_end":40469,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let entropy = vec![0x1a, 0x48, 0x6a, 0x5f, 0xbe, 0x53, 0x63, 0x99, 0x84, 0xcb, 0x64, 0xb0, 0x70, 0x75, 0x5f, 0x7b];","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40474,"byte_end":40593,"line_start":263,"line_end":263,"column_start":5,"column_end":124}},{"value":"/ let mnemonic = Mnemonic::from_entropy(entropy).unwrap();","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40598,"byte_end":40658,"line_start":264,"line_end":264,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(mnemonic.phrase(), \"bottom drive obey lake curtain smoke basket hold race lonely fit walk\");","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40663,"byte_end":40770,"line_start":265,"line_end":265,"column_start":5,"column_end":112}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40775,"byte_end":40782,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41455,"byte_end":41470,"line_start":282,"line_end":282,"column_start":12,"column_end":27},"name":"from_entropy_in","qualname":"<Mnemonic>::from_entropy_in","value":"pub fn from_entropy_in<E: Into<Vec<u8>>>(Language, E) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Mnemonic`] in the specified language from the given entropy.","sig":null,"attributes":[{"value":"/ Creates a new [`Mnemonic`] in the specified language from the given entropy.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":40931,"byte_end":41011,"line_start":271,"line_end":271,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41016,"byte_end":41019,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41024,"byte_end":41037,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41042,"byte_end":41045,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41050,"byte_end":41057,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"/ use bip0039::{Language, Mnemonic};","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41062,"byte_end":41100,"line_start":276,"line_end":276,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41105,"byte_end":41108,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ let entropy = vec![0x1a, 0x48, 0x6a, 0x5f, 0xbe, 0x53, 0x63, 0x99, 0x84, 0xcb, 0x64, 0xb0, 0x70, 0x75, 0x5f, 0x7b];","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41113,"byte_end":41232,"line_start":278,"line_end":278,"column_start":5,"column_end":124}},{"value":"/ let mnemonic = Mnemonic::from_entropy_in(Language::English, entropy).unwrap();","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41237,"byte_end":41319,"line_start":279,"line_end":279,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(mnemonic.phrase(), \"bottom drive obey lake curtain smoke basket hold race lonely fit walk\");","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41324,"byte_end":41431,"line_start":280,"line_end":280,"column_start":5,"column_end":112}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":41436,"byte_end":41443,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43144,"byte_end":43155,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"name":"from_phrase","qualname":"<Mnemonic>::from_phrase","value":"pub fn from_phrase<'a, P: Into<Cow>>(P) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Mnemonic`] from an existing mnemonic phrase.","sig":null,"attributes":[{"value":"/ Creates a [`Mnemonic`] from an existing mnemonic phrase.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":42771,"byte_end":42831,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":42836,"byte_end":42839,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":42844,"byte_end":42857,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":42862,"byte_end":42865,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":42870,"byte_end":42877,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use bip0039::Mnemonic;","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":42882,"byte_end":42908,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":42913,"byte_end":42916,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let phrase = \"bottom drive obey lake curtain smoke basket hold race lonely fit walk\";","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":42921,"byte_end":43010,"line_start":321,"line_end":321,"column_start":5,"column_end":94}},{"value":"/ let mnemonic = Mnemonic::from_phrase(phrase).unwrap();","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43015,"byte_end":43073,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(mnemonic.phrase(), phrase);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43078,"byte_end":43120,"line_start":323,"line_end":323,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43125,"byte_end":43132,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43978,"byte_end":43992,"line_start":344,"line_end":344,"column_start":12,"column_end":26},"name":"from_phrase_in","qualname":"<Mnemonic>::from_phrase_in","value":"pub fn from_phrase_in<'a, P: Into<Cow>>(Language, P) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Mnemonic`] from an existing mnemonic phrase in the given language.","sig":null,"attributes":[{"value":"/ Creates a [`Mnemonic`] from an existing mnemonic phrase in the given language.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43286,"byte_end":43368,"line_start":329,"line_end":329,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43373,"byte_end":43376,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43381,"byte_end":43394,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43399,"byte_end":43402,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43407,"byte_end":43414,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ use bip0039::{Error, Mnemonic, Language};","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43419,"byte_end":43464,"line_start":334,"line_end":334,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43469,"byte_end":43472,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let phrase = \"bottom drive obey lake curtain smoke basket hold race lonely fit walk\";","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43477,"byte_end":43566,"line_start":336,"line_end":336,"column_start":5,"column_end":94}},{"value":"/ let mnemonic = Mnemonic::from_phrase_in(Language::English, phrase).unwrap();","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43571,"byte_end":43651,"line_start":337,"line_end":337,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(mnemonic.phrase(), phrase);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43656,"byte_end":43698,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43703,"byte_end":43706,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let phrase = \"bottom drive obey lake curtain smoke basket hold race lonely fit shit\";","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43711,"byte_end":43800,"line_start":340,"line_end":340,"column_start":5,"column_end":94}},{"value":"/ let mnemonic = Mnemonic::from_phrase_in(Language::English, phrase);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43805,"byte_end":43876,"line_start":341,"line_end":341,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(mnemonic.unwrap_err(), Error::UnknownWord(\"shit\".into()));","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43881,"byte_end":43954,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":43959,"byte_end":43966,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44654,"byte_end":44662,"line_start":367,"line_end":367,"column_start":12,"column_end":20},"name":"validate","qualname":"<Mnemonic>::validate","value":"pub fn validate<'a, P: Into<Cow>>(P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Validates the word count and checksum of an English mnemonic phrase.","sig":null,"attributes":[{"value":"/ Validates the word count and checksum of an English mnemonic phrase.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44326,"byte_end":44398,"line_start":357,"line_end":357,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44403,"byte_end":44406,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44411,"byte_end":44424,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44429,"byte_end":44432,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44437,"byte_end":44444,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use bip0039::Mnemonic;","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44449,"byte_end":44475,"line_start":362,"line_end":362,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44480,"byte_end":44483,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let result = Mnemonic::validate(\"bottom drive obey lake curtain smoke basket hold race lonely fit walk\");","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44488,"byte_end":44597,"line_start":364,"line_end":364,"column_start":5,"column_end":114}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44602,"byte_end":44630,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44635,"byte_end":44642,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":46125,"byte_end":46136,"line_start":393,"line_end":393,"column_start":12,"column_end":23},"name":"validate_in","qualname":"<Mnemonic>::validate_in","value":"pub fn validate_in<'a, P: Into<Cow>>(Language, P) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Validates the word count and checksum of a mnemonic phrase in the given language.","sig":null,"attributes":[{"value":"/ Validates the word count and checksum of a mnemonic phrase in the given language.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44788,"byte_end":44873,"line_start":371,"line_end":371,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44878,"byte_end":44881,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44886,"byte_end":44899,"line_start":373,"line_end":373,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44904,"byte_end":44907,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44912,"byte_end":44919,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ use bip0039::{Error, Language, Mnemonic};","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44924,"byte_end":44969,"line_start":376,"line_end":376,"column_start":5,"column_end":50}},{"value":"/ use unicode_normalization::UnicodeNormalization;","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":44974,"byte_end":45026,"line_start":377,"line_end":377,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45031,"byte_end":45034,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ let phrase = \"bottom drive obey lake curtain smoke basket hold race lonely fit walk\";","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45039,"byte_end":45128,"line_start":379,"line_end":379,"column_start":5,"column_end":94}},{"value":"/ let result = Mnemonic::validate_in(Language::English, phrase);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45133,"byte_end":45199,"line_start":380,"line_end":380,"column_start":5,"column_end":71}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45204,"byte_end":45232,"line_start":381,"line_end":381,"column_start":5,"column_end":33}},{"value":"/ let phrase = \"bottom drive obey lake curtain smoke basket hold race lonely fit shit\";","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45237,"byte_end":45326,"line_start":382,"line_end":382,"column_start":5,"column_end":94}},{"value":"/ let result = Mnemonic::validate_in(Language::English, phrase);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45331,"byte_end":45397,"line_start":383,"line_end":383,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(result.unwrap_err(), Error::UnknownWord(\"shit\".into()));","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45402,"byte_end":45473,"line_start":384,"line_end":384,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45478,"byte_end":45481,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let phrase = \"そつう　れきだい　ほんやく　わかす　りくつ　ばいか　ろせん　やちん　そつう　れきだい　ほんやく　わかめ\";","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45486,"byte_end":45659,"line_start":386,"line_end":386,"column_start":5,"column_end":76}},{"value":"/ let result = Mnemonic::validate_in(Language::Japanese, phrase);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45664,"byte_end":45731,"line_start":387,"line_end":387,"column_start":5,"column_end":72}},{"value":"/ assert!(result.is_ok());","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45736,"byte_end":45764,"line_start":388,"line_end":388,"column_start":5,"column_end":33}},{"value":"/ let phrase = \"そつう　れきだい　ほんやく　わかす　りくつ　ばいか　ろせん　やちん　そつう　れきだい　ほんやく　ばか\";","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45769,"byte_end":45939,"line_start":389,"line_end":389,"column_start":5,"column_end":75}},{"value":"/ let result = Mnemonic::validate_in(Language::Japanese, phrase);","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":45944,"byte_end":46011,"line_start":390,"line_end":390,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(result.unwrap_err(), Error::UnknownWord(\"ばか\".nfkd().to_string()));","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":46016,"byte_end":46101,"line_start":391,"line_end":391,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":46106,"byte_end":46113,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":48377,"byte_end":48384,"line_start":453,"line_end":453,"column_start":12,"column_end":19},"name":"to_seed","qualname":"<Mnemonic>::to_seed","value":"pub fn to_seed<P: AsRef<str>>(&Self, P) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Generates the seed from the [`Mnemonic`] and the passphrase.","sig":null,"attributes":[{"value":"/ Generates the seed from the [`Mnemonic`] and the passphrase.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":47722,"byte_end":47786,"line_start":437,"line_end":437,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":47791,"byte_end":47794,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ If a passphrase is not present, an empty string `\"\"` is used instead.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":47799,"byte_end":47872,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":47877,"byte_end":47880,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":47885,"byte_end":47898,"line_start":441,"line_end":441,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":47903,"byte_end":47906,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":47911,"byte_end":47918,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ use bip0039::Mnemonic;","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":47923,"byte_end":47949,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":47954,"byte_end":47957,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ let phrase = \"bottom drive obey lake curtain smoke basket hold race lonely fit walk\";","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":47962,"byte_end":48051,"line_start":446,"line_end":446,"column_start":5,"column_end":94}},{"value":"/ let mnemonic = Mnemonic::from_phrase(phrase).unwrap();","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":48056,"byte_end":48114,"line_start":447,"line_end":447,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":48119,"byte_end":48134,"line_start":448,"line_end":448,"column_start":5,"column_end":20}},{"value":"/     mnemonic.to_seed(\"\").to_vec(),","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":48139,"byte_end":48177,"line_start":449,"line_end":449,"column_start":5,"column_end":43}},{"value":"/     hex::decode(\"02d5cd1db85b4d1397d78978062a1160e76e94cc5aaad3089644846865bb18fc68ddf383059d3fe82902a203d60790a8c8ab488de5013d10a8a8bded8d9174b9\").unwrap()","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":48182,"byte_end":48342,"line_start":450,"line_end":450,"column_start":5,"column_end":165}},{"value":"/ );","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":48347,"byte_end":48353,"line_start":451,"line_end":451,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":48358,"byte_end":48365,"line_start":452,"line_end":452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":49457,"byte_end":49461,"line_start":480,"line_end":480,"column_start":12,"column_end":16},"name":"lang","qualname":"<Mnemonic>::lang","value":"pub fn lang(&Self) -> Language","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Language`] of the mnemonic.\n","sig":null,"attributes":[{"value":"/ Returns the [`Language`] of the mnemonic.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":49400,"byte_end":49445,"line_start":479,"line_end":479,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":49574,"byte_end":49580,"line_start":485,"line_end":485,"column_start":12,"column_end":18},"name":"phrase","qualname":"<Mnemonic>::phrase","value":"pub fn phrase(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the mnemonic phrase as a string slice.\n","sig":null,"attributes":[{"value":"/ Returns the mnemonic phrase as a string slice.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":49512,"byte_end":49562,"line_start":484,"line_end":484,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":49706,"byte_end":49717,"line_start":490,"line_end":490,"column_start":12,"column_end":23},"name":"into_phrase","qualname":"<Mnemonic>::into_phrase","value":"pub fn into_phrase(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Mnemonic` and return the phrase as a `String`.\n","sig":null,"attributes":[{"value":"/ Consumes the `Mnemonic` and return the phrase as a `String`.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":49630,"byte_end":49694,"line_start":489,"line_end":489,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":50022,"byte_end":50029,"line_start":497,"line_end":497,"column_start":12,"column_end":19},"name":"entropy","qualname":"<Mnemonic>::entropy","value":"pub fn entropy(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the original entropy of the mnemonic phrase.\n","sig":null,"attributes":[{"value":"/ Returns the original entropy of the mnemonic phrase.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":49954,"byte_end":50010,"line_start":496,"line_end":496,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":50159,"byte_end":50171,"line_start":502,"line_end":502,"column_start":12,"column_end":24},"name":"into_entropy","qualname":"<Mnemonic>::into_entropy","value":"pub fn into_entropy(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Mnemonic` and return the entropy as a `Vec<u8>`.\n","sig":null,"attributes":[{"value":"/ Consumes the `Mnemonic` and return the entropy as a `Vec<u8>`.","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":50081,"byte_end":50147,"line_start":501,"line_end":501,"column_start":5,"column_end":71}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1586,"byte_end":1591,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":2319,"byte_end":2324,"line_start":38,"line_end":38,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":3814,"byte_end":3822,"line_start":58,"line_end":58,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":3915,"byte_end":3923,"line_start":64,"line_end":64,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":4050,"byte_end":4058,"line_start":70,"line_end":70,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":34196,"byte_end":34201,"line_start":38,"line_end":38,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":34284,"byte_end":34289,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":34863,"byte_end":34868,"line_start":68,"line_end":68,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":35008,"byte_end":35013,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38262,"byte_end":38270,"line_start":177,"line_end":177,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38402,"byte_end":38410,"line_start":183,"line_end":183,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38542,"byte_end":38550,"line_start":189,"line_end":189,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38688,"byte_end":38696,"line_start":197,"line_end":197,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38778,"byte_end":38786,"line_start":203,"line_end":203,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38903,"byte_end":38911,"line_start":210,"line_end":210,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38977,"byte_end":38985,"line_start":216,"line_end":216,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":135},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":1586,"byte_end":1591,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":177},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/error.rs","byte_start":2319,"byte_end":2324,"line_start":38,"line_end":38,"column_start":28,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":177},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":3814,"byte_end":3822,"line_start":58,"line_end":58,"column_start":18,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":200},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":3915,"byte_end":3923,"line_start":64,"line_end":64,"column_start":29,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":200},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/language/mod.rs","byte_start":4050,"byte_end":4058,"line_start":70,"line_end":70,"column_start":6,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":34196,"byte_end":34201,"line_start":38,"line_end":38,"column_start":18,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":221},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":34284,"byte_end":34289,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":221},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":34863,"byte_end":34868,"line_start":68,"line_end":68,"column_start":25,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":221},"to":{"krate":2,"index":2937}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":35008,"byte_end":35013,"line_start":76,"line_end":76,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38262,"byte_end":38270,"line_start":177,"line_end":177,"column_start":21,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":9595}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38402,"byte_end":38410,"line_start":183,"line_end":183,"column_start":23,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":9602}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38542,"byte_end":38550,"line_start":189,"line_end":189,"column_start":23,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":12188}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38688,"byte_end":38696,"line_start":197,"line_end":197,"column_start":21,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38778,"byte_end":38786,"line_start":203,"line_end":203,"column_start":18,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":255},"to":{"krate":30,"index":44}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38903,"byte_end":38911,"line_start":210,"line_end":210,"column_start":15,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":255},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/home/yourgod/.cargo/registry/src/github.com-1ecc6299db9ec823/bip0039-0.10.1/src/mnemonic.rs","byte_start":38977,"byte_end":38985,"line_start":216,"line_end":216,"column_start":6,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":255},"to":{"krate":4294967295,"index":4294967295}}]}