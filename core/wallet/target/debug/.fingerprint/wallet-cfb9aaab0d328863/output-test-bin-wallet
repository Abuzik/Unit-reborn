{"message":"unresolved import `bip39::MnemonicType`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":180,"byte_end":192,"line_start":9,"line_end":9,"column_start":23,"column_end":35,"is_primary":true,"text":[{"text":"use bip39::{Mnemonic, MnemonicType, Language};","highlight_start":23,"highlight_end":35}],"label":"no `MnemonicType` in the root","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a similar name exists in the module","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":180,"byte_end":192,"line_start":9,"line_end":9,"column_start":23,"column_end":35,"is_primary":true,"text":[{"text":"use bip39::{Mnemonic, MnemonicType, Language};","highlight_start":23,"highlight_end":35}],"label":null,"suggested_replacement":"Mnemonic","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `bip39::MnemonicType`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:9:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse bip39::{Mnemonic, MnemonicType, Language};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno `MnemonicType` in the root\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a similar name exists in the module: `Mnemonic`\u001b[0m\n\n"}
{"message":"unused import: `std::str::FromStr`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":52,"byte_end":69,"line_start":4,"line_end":4,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use std::str::FromStr;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":48,"byte_end":70,"line_start":4,"line_end":4,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use std::str::FromStr;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::str::FromStr`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse std::str::FromStr;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `sha3::Sha3_512`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":75,"byte_end":89,"line_start":5,"line_end":5,"column_start":5,"column_end":19,"is_primary":true,"text":[{"text":"use sha3::Sha3_512;","highlight_start":5,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":71,"byte_end":90,"line_start":5,"line_end":5,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"use sha3::Sha3_512;","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `sha3::Sha3_512`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse sha3::Sha3_512;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `hex_literal::hex`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":95,"byte_end":111,"line_start":6,"line_end":6,"column_start":5,"column_end":21,"is_primary":true,"text":[{"text":"use hex_literal::hex;","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":91,"byte_end":112,"line_start":6,"line_end":6,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"use hex_literal::hex;","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `hex_literal::hex`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse hex_literal::hex;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the function or associated item `new` exists for struct `Mnemonic`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":560,"byte_end":563,"line_start":19,"line_end":19,"column_start":36,"column_end":39,"is_primary":true,"text":[{"text":"    let mnemonic = match Mnemonic::new(mnemonic_type, Language::English, \"\") {","highlight_start":36,"highlight_end":39}],"label":"function or associated item cannot be called on `Mnemonic` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/kirillzhukov/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4432,"byte_end":4451,"line_start":155,"line_end":155,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Mnemonic {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Mnemonic: Default`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/kirillzhukov/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4432,"byte_end":4451,"line_start":155,"line_end":155,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Mnemonic {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Mnemonic: digest::Reset`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/kirillzhukov/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4432,"byte_end":4451,"line_start":155,"line_end":155,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Mnemonic {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Mnemonic: digest::Update`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/kirillzhukov/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4432,"byte_end":4451,"line_start":155,"line_end":155,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Mnemonic {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Mnemonic: digest::fixed::FixedOutput`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/kirillzhukov/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs","byte_start":4432,"byte_end":4451,"line_start":155,"line_end":155,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"pub struct Mnemonic {","highlight_start":1,"highlight_end":20}],"label":"doesn't satisfy `Mnemonic: ed25519_dalek::Digest`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`Mnemonic: digest::Update`\nwhich is required by `Mnemonic: ed25519_dalek::Digest`\n`Mnemonic: digest::fixed::FixedOutput`\nwhich is required by `Mnemonic: ed25519_dalek::Digest`\n`Mnemonic: digest::Reset`\nwhich is required by `Mnemonic: ed25519_dalek::Digest`\n`Mnemonic: Default`\nwhich is required by `Mnemonic: ed25519_dalek::Digest`\n`&Mnemonic: digest::Update`\nwhich is required by `&Mnemonic: ed25519_dalek::Digest`\n`&Mnemonic: digest::fixed::FixedOutput`\nwhich is required by `&Mnemonic: ed25519_dalek::Digest`\n`&Mnemonic: digest::Reset`\nwhich is required by `&Mnemonic: ed25519_dalek::Digest`\n`&Mnemonic: Default`\nwhich is required by `&Mnemonic: ed25519_dalek::Digest`\n`&mut Mnemonic: digest::Update`\nwhich is required by `&mut Mnemonic: ed25519_dalek::Digest`\n`&mut Mnemonic: digest::fixed::FixedOutput`\nwhich is required by `&mut Mnemonic: ed25519_dalek::Digest`\n`&mut Mnemonic: digest::Reset`\nwhich is required by `&mut Mnemonic: ed25519_dalek::Digest`\n`&mut Mnemonic: Clone`\nwhich is required by `&mut Mnemonic: ed25519_dalek::Digest`\n`&mut Mnemonic: Default`\nwhich is required by `&mut Mnemonic: ed25519_dalek::Digest`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `new` exists for struct `Mnemonic`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:19:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let mnemonic = match Mnemonic::new(mnemonic_type, Language::English, \"\") {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called on `Mnemonic` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/kirillzhukov/.cargo/registry/src/github.com-1ecc6299db9ec823/bip39-1.0.1/src/lib.rs:155:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mpub struct Mnemonic {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Mnemonic: Default`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Mnemonic: digest::Reset`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Mnemonic: digest::Update`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Mnemonic: digest::fixed::FixedOutput`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `Mnemonic: digest::Update`\u001b[0m\n\u001b[0m            which is required by `Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `Mnemonic: digest::fixed::FixedOutput`\u001b[0m\n\u001b[0m            which is required by `Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `Mnemonic: digest::Reset`\u001b[0m\n\u001b[0m            which is required by `Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `Mnemonic: Default`\u001b[0m\n\u001b[0m            which is required by `Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `&Mnemonic: digest::Update`\u001b[0m\n\u001b[0m            which is required by `&Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `&Mnemonic: digest::fixed::FixedOutput`\u001b[0m\n\u001b[0m            which is required by `&Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `&Mnemonic: digest::Reset`\u001b[0m\n\u001b[0m            which is required by `&Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `&Mnemonic: Default`\u001b[0m\n\u001b[0m            which is required by `&Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `&mut Mnemonic: digest::Update`\u001b[0m\n\u001b[0m            which is required by `&mut Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `&mut Mnemonic: digest::fixed::FixedOutput`\u001b[0m\n\u001b[0m            which is required by `&mut Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `&mut Mnemonic: digest::Reset`\u001b[0m\n\u001b[0m            which is required by `&mut Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `&mut Mnemonic: Clone`\u001b[0m\n\u001b[0m            which is required by `&mut Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\u001b[0m            `&mut Mnemonic: Default`\u001b[0m\n\u001b[0m            which is required by `&mut Mnemonic: ed25519_dalek::Digest`\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors; 3 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors; 3 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0432, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0432, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0432`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0432`.\u001b[0m\n"}
